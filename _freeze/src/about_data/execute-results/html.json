{
  "hash": "b8fc4642256f9e1217940b20d1fbd3e4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Emerging trend indicators of raccoon in Europe\"\nformat:\n  html:\n    df-print: paged\n    toc: true\n    toc-float: true\n    toc-depth: 4\n    number-sections: true\n    code-fold: true\n    code-tools: true\nexecute:\n  eval: true\n  echo: true\n  warning: true\n  error: false\n  include: true\nfrom: markdown+emoji\n---\n\n\n\n\n## Introduction\n\nThis document shows how using GBIF species occurrence cubes to assess the emerging status of raccoon ([_Procyon lotor_](https://www.gbif.org/species/5218786)) in Europe and in European countries. This workflow is strongly based on the [**occurrence TrIAS indicators**](https://github.com/trias-project/indicators) and can be extended to other (invasive alien) species.\n\n### Setup\n\nFirst, list and load the needed packages.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(here)\nlibrary(dplyr)\nlibrary(patchwork)\nlibrary(tidyr)\nlibrary(purrr)\nlibrary(tibble)\nlibrary(trias)\nlibrary(countrycode)\n```\n:::\n\n\n\n\n## Scope\n\n### Taxonomic scope\n\nThe species of interest is the raccoon (*Procyon lotor (Linnaeus, 1758)*, GBIF Key: [5218786](https://www.gbif.org/species/5218786)). This workflow can easily be extended to other species.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nspecies <- tibble::tibble(\n  specieskey = c(5218786),\n  canonical_name = c(\"Procyon lotor\")\n)\n```\n:::\n\n\n\n\n### Spatial scope\n\nWe are interested over the emerging status of the four species in the **European countries** and all **Europe**.\n\n### Temporal scope\n\nWe request a species occurrence cube based on data from **1950**.\n\n## Species occurrence cube\n\nWe triggered a GBIF occurrence cube via the [Occurrence SQL Download API](https://techdocs.gbif.org/en/data-use/api-sql-downloads) and on the hand of a JSON query ([query_cube_raccoon.json](../../data/input/query_cube_raccoon.json)). The resulting cube (DOI: [10.15468/dl.mmnusj](https://doi.org/10.15468/dl.mmnusj), `downloadKey`: 0023024-250127130748423) can be downloaded in TSV format from GBIF. We have it saved at `data/input` as [`0023024-250127130748423.csv`](../../data/input/0023024-250127130748423.csv):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube <- readr::read_tsv(\n  here::here(\n    \"data\",\n    \"input\",\n    \"0023024-250127130748423.csv\"\n  )\n)\n```\n:::\n\n\n\n\nPreview:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(cube)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"countrycode\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"eeacellcode\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"classkey\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"class\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"specieskey\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"species\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"occurrences\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mincoordinateuncertaintyinmeters\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mintemporaluncertainty\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"classcount\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2025\",\"2\":\"BE\",\"3\":\"1kmE3946N3135\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"3\",\"9\":\"7\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2025\",\"2\":\"BE\",\"3\":\"1kmE3950N3122\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"50\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2025\",\"2\":\"BE\",\"3\":\"1kmE3975N3112\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"4\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2025\",\"2\":\"NL\",\"3\":\"1kmE4089N3342\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"5000\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2025\",\"2\":\"DE\",\"3\":\"1kmE4150N2888\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"25\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2025\",\"2\":\"DE\",\"3\":\"1kmE4159N3215\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"4\",\"10\":\"86400\",\"11\":\"21001\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nNotice the presence of column `countrycode` as we grouped by country. It can happen that an occurrence is assigned to a cell in another country or a cell on the border of two different countries It happens few times:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube |>\n  dplyr::distinct(eeacellcode, countrycode, year) |>\n  dplyr::add_count(eeacellcode, year) |>\n  dplyr::filter(n > 1) |>\n  dplyr::arrange(eeacellcode)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"eeacellcode\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"countrycode\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"year\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"n\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1kmE4017N2981\",\"2\":\"LU\",\"3\":\"2016\",\"4\":\"2\"},{\"1\":\"1kmE4017N2981\",\"2\":\"BE\",\"3\":\"2016\",\"4\":\"2\"},{\"1\":\"1kmE4025N2958\",\"2\":\"BE\",\"3\":\"2024\",\"4\":\"2\"},{\"1\":\"1kmE4025N2958\",\"2\":\"LU\",\"3\":\"2024\",\"4\":\"2\"},{\"1\":\"1kmE4044N3006\",\"2\":\"DE\",\"3\":\"2016\",\"4\":\"2\"},{\"1\":\"1kmE4044N3006\",\"2\":\"LU\",\"3\":\"2016\",\"4\":\"2\"},{\"1\":\"NA\",\"2\":\"GE\",\"3\":\"2023\",\"4\":\"2\"},{\"1\":\"NA\",\"2\":\"AZ\",\"3\":\"2023\",\"4\":\"2\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nCountries with at least one occurrence:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube |>\n  dplyr::distinct(countrycode) |>\n  dplyr::pull(countrycode)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"BE\" \"NL\" \"DE\" \"AZ\" \"ES\" \"GB\" \"FR\" \"LU\" \"CH\" \"DK\" \"LI\" \"SE\" \"CZ\" \"AT\" \"PL\"\n[16] \"RU\" \"GE\" \"IT\" \"LT\" \"IE\" \"UA\" \"PT\" \"NO\"\n```\n\n\n:::\n:::\n\n\n\n\nRemove countries not completely covered by the EEA grid:\n\n-   Ukraine (`UA`)\n-   Russia (`RU`)\n-   Azerbaijan (`AZ`)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube <- cube |>\n  dplyr::filter(!countrycode %in% c(\"UA\", \"RU\", \"AZ\"))\n```\n:::\n\n\n\n\nAre there rows without `eeacellcode`?\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube |>\n  dplyr::filter(is.na(eeacellcode))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"countrycode\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"eeacellcode\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"classkey\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"class\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"specieskey\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"species\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"occurrences\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mincoordinateuncertaintyinmeters\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mintemporaluncertainty\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"classcount\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"2023\",\"2\":\"GE\",\"3\":\"NA\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"9\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2018\",\"2\":\"GE\",\"3\":\"NA\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"100\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"2017\",\"2\":\"GE\",\"3\":\"NA\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"10\",\"10\":\"86400\",\"11\":\"21001\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nWe remove them:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube <- cube |>\n  dplyr::filter(!is.na(eeacellcode))\n```\n:::\n\n\n\n\nExtract country codes:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountrycode <- cube |>\n  dplyr::distinct(countrycode) |>\n  dplyr::pull(countrycode)\ncountrycode\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"BE\" \"NL\" \"DE\" \"ES\" \"GB\" \"FR\" \"LU\" \"CH\" \"DK\" \"LI\" \"SE\" \"CZ\" \"AT\" \"PL\" \"IT\"\n[16] \"LT\" \"IE\" \"PT\" \"NO\"\n```\n\n\n:::\n:::\n\n\n\n\nGet country names from country codes:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- tibble::tibble(\n  countrycode = countrycode) |>\n  dplyr::mutate(country_name = countrycode::countrycode(countrycode, \"iso2c\", \"country.name\"))\ncountries\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"countrycode\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"country_name\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"BE\",\"2\":\"Belgium\"},{\"1\":\"NL\",\"2\":\"Netherlands\"},{\"1\":\"DE\",\"2\":\"Germany\"},{\"1\":\"ES\",\"2\":\"Spain\"},{\"1\":\"GB\",\"2\":\"United Kingdom\"},{\"1\":\"FR\",\"2\":\"France\"},{\"1\":\"LU\",\"2\":\"Luxembourg\"},{\"1\":\"CH\",\"2\":\"Switzerland\"},{\"1\":\"DK\",\"2\":\"Denmark\"},{\"1\":\"LI\",\"2\":\"Liechtenstein\"},{\"1\":\"SE\",\"2\":\"Sweden\"},{\"1\":\"CZ\",\"2\":\"Czechia\"},{\"1\":\"AT\",\"2\":\"Austria\"},{\"1\":\"PL\",\"2\":\"Poland\"},{\"1\":\"IT\",\"2\":\"Italy\"},{\"1\":\"LT\",\"2\":\"Lithuania\"},{\"1\":\"IE\",\"2\":\"Ireland\"},{\"1\":\"PT\",\"2\":\"Portugal\"},{\"1\":\"NO\",\"2\":\"Norway\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\nWe add `\"Europe\"` to the list of country names and codes. We use `\"Europe\"` as \"country code\": the abbreviation EU would be confusing as it is the acronym of the European Union:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncountries <- countries |>\n  dplyr::add_row(countrycode = \"Europe\", country_name = \"Europe\")\ncountrycode <- c(countrycode, \"Europe\")\n```\n:::\n\n\n\n\nSo, from now on, when we refer to \"country\", we also mean \"Europe\".\n\nWe calculate the cube for Europe:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube_europe <- cube |>\n  group_by(specieskey, species, year, eeacellcode) |>\n  summarise(\n    countrycode = \"Europe\",\n    occurrences = sum(occurrences),\n    class = unique(class),\n    classkey = unique(classkey),\n    mincoordinateuncertaintyinmeters = min(mincoordinateuncertaintyinmeters),\n    mintemporaluncertainty = min(mintemporaluncertainty),\n    classcount = unique(classcount),\n    .groups = \"drop\") %>%\n  # order columns as in the original cube\n  dplyr::select(\n    dplyr::all_of(names(cube))\n  )\nhead(cube_europe)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"year\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"countrycode\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"eeacellcode\"],\"name\":[3],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"classkey\"],\"name\":[4],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"class\"],\"name\":[5],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"specieskey\"],\"name\":[6],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"species\"],\"name\":[7],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"occurrences\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mincoordinateuncertaintyinmeters\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"mintemporaluncertainty\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"classcount\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"1965\",\"2\":\"Europe\",\"3\":\"1kmE4954N3064\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"1000\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"1972\",\"2\":\"Europe\",\"3\":\"1kmE4493N2684\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"1000\",\"10\":\"2592000\",\"11\":\"21001\"},{\"1\":\"1974\",\"2\":\"Europe\",\"3\":\"1kmE3846N2966\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"1191\",\"10\":\"2678400\",\"11\":\"21001\"},{\"1\":\"1974\",\"2\":\"Europe\",\"3\":\"1kmE4542N2763\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"1000\",\"10\":\"86400\",\"11\":\"21001\"},{\"1\":\"1975\",\"2\":\"Europe\",\"3\":\"1kmE4140N2677\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"3535\",\"10\":\"31536000\",\"11\":\"21001\"},{\"1\":\"1975\",\"2\":\"Europe\",\"3\":\"1kmE4181N2714\",\"4\":\"359\",\"5\":\"Mammalia\",\"6\":\"5218786\",\"7\":\"Procyon lotor\",\"8\":\"1\",\"9\":\"3535\",\"10\":\"31536000\",\"11\":\"21001\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nAnd we add it to `cube`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncube <- dplyr::bind_rows(cube, cube_europe)\n```\n:::\n\n\n\n\n## From cubes to emerging status\n\nWe assess the emerging status of the species at country level and in all Europe for 2024. We first have to create time series up to 2024.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlast_year <- 2024\n```\n:::\n\n\n\n\n### Preprocess: from cube to time series\n\nFor each country, define cells with at least one observation:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_cc <-   cube |>\n  dplyr::group_by(specieskey, countrycode) |>\n  dplyr::distinct(eeacellcode) |>\n  dplyr::ungroup()\n```\n:::\n\n\n\n\nFor each country, identify the first year with at least one observation:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_begin_year <-\n  cube |>\n  dplyr::group_by(specieskey, countrycode) |>\n  dplyr::summarize(begin_year = min(year))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'specieskey'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n\n\n\nFor each country, combine `begin_year` and unique `eeacellcode` as found above:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_cc <-   df_cc |>\n  dplyr::left_join(df_begin_year, by = c(\"specieskey\", \"countrycode\")) |> \n  dplyr::select(specieskey, countrycode, begin_year, eeacellcode)\n```\n:::\n\n\n\n\nPreview:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(df_cc)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"specieskey\"],\"name\":[1],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"countrycode\"],\"name\":[2],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"begin_year\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"eeacellcode\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"5218786\",\"2\":\"BE\",\"3\":\"1986\",\"4\":\"1kmE3946N3135\"},{\"1\":\"5218786\",\"2\":\"BE\",\"3\":\"1986\",\"4\":\"1kmE3950N3122\"},{\"1\":\"5218786\",\"2\":\"BE\",\"3\":\"1986\",\"4\":\"1kmE3975N3112\"},{\"1\":\"5218786\",\"2\":\"NL\",\"3\":\"1978\",\"4\":\"1kmE4089N3342\"},{\"1\":\"5218786\",\"2\":\"DE\",\"3\":\"1975\",\"4\":\"1kmE4150N2888\"},{\"1\":\"5218786\",\"2\":\"DE\",\"3\":\"1975\",\"4\":\"1kmE4159N3215\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n\n\nFor each cell (`eeacellcode`), country (`countrycode`) and species (`specieskey`) we can now create a time series:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define help function\nmake_time_series <- function(eeacellcode, countrycode, specieskey, begin_year, last_year) {\n  tidyr::expand_grid(\n    eeacellcode = eeacellcode,\n    countrycode = countrycode,\n    specieskey = specieskey,\n    year = seq(from = begin_year, to = last_year)\n  )\n}\n\n# Create timeseries slots\ndf_ts <- purrr::pmap_dfr(df_cc,\n  .f = make_time_series,\n  last_year = last_year\n)\n\n# Add occurrence data\ndf_ts <-\n  df_ts |>\n  dplyr::left_join(\n    cube |> dplyr::select(\n      specieskey,\n      countrycode,\n      year,\n      eeacellcode,\n      occurrences\n    ),\n    by = c(\"specieskey\", \"countrycode\", \"year\", \"eeacellcode\")\n  )\n\n# Replace NAs with 0\ndf_ts <-\n  df_ts |>\n  tidyr::replace_na(list(occurrences = 0))\n```\n:::\n\n\n\n\nAdd column for presence (1) or absence (0):\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_ts <-\n  df_ts |>\n  dplyr::mutate(\n    ispresent = dplyr::if_else(occurrences > 0, 1, 0)\n  )\n```\n:::\n\n\n\n\nSave the time series at country level as an interim output, `time_series.tsv` in directory `data/interim`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadr::write_tsv(\n  df_ts,\n  here::here(\"data\", \"interim\", \"time_series.tsv\"),\n  na = \"\"\n)\n```\n:::\n\n\n\n\n### Apply GAM\n\nWe are now ready to apply a Generalized Additive Model (GAM) to assess the emerging status of raccoon.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neval_year <- 2024\n```\n:::\n\n\n\n\nLet's compact the time series:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncompact_df_ts <- df_ts |>\n    dplyr::group_by(specieskey, countrycode, year) |>\n    dplyr::summarise(\n      occs = sum(occurrences),\n      ncells = sum(ispresent),\n      .groups = \"drop\")\n```\n:::\n\n\n\n\nAll plots will be saved in subdirectories of `./data/output/GAM_outputs`:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndir_name_basic <- here::here(\"data\", \"output\", \"GAM_outputs\")\n```\n:::\n\n\n\n\nWe also define the plot dimensions in pixels:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_dimensions <- list(width = 2800, height = 1500)\n```\n:::\n\n\n\n\nWe apply GAM for each country for the number of occurrences:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngam_occs <- purrr::map(\n  countrycode,\n  function(code) {\n    gam_occs_per_country <- purrr::map2(\n      species$specieskey, species$canonical_name,\n      function(t, n) {\n        df_key <- compact_df_ts |>\n          dplyr::filter(specieskey == t, countrycode == code)\n        trias::apply_gam(\n          df = df_key,\n          y_var = \"occs\",\n          taxonKey = \"specieskey\",\n          eval_years = 2024,\n          type_indicator = \"observations\",\n          taxon_key = t,\n          name = n,\n          df_title = code,\n          dir_name = paste0(dir_name_basic, \"/long_titles\"),\n          y_label = \"number of observations\",\n          saveplot = TRUE,\n          width = plot_dimensions$width,\n          height = plot_dimensions$height\n        )\n      })\n    names(gam_occs_per_country) <- species$canonical_name\n    gam_occs_per_country\n  }\n)\nnames(gam_occs) <- countrycode\n```\n:::\n\n\n\n\nAnd the number of occupied cells, or **measured occupancy**:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngam_ncells <- purrr::map(\n  countrycode,\n  function(code) {\n    gam_ncells_per_country <- purrr::map2(\n      species$specieskey, species$canonical_name,\n      function(t, n) {\n        df_key <- compact_df_ts |>\n          dplyr::filter(specieskey == t, countrycode == code)\n        trias::apply_gam(\n          df = df_key,\n          y_var = \"ncells\",\n          taxonKey = \"specieskey\",\n          eval_years = 2024,\n          type_indicator = \"occupancy\",\n          taxon_key = t,\n          name = n,\n          df_title = code,\n          dir_name = paste0(dir_name_basic, \"/long_titles\"),\n          y_label = \"number of occupied cells\",\n          saveplot = TRUE,\n          width = plot_dimensions$width,\n          height = plot_dimensions$height\n        )\n      })\n    names(gam_ncells_per_country) <- species$canonical_name\n    gam_ncells_per_country\n  }\n)\nnames(gam_ncells) <- countrycode\n```\n:::\n\n\n\n\n## Plots\n\nPlease go to [`./data/output/GAM_outputs`](https://github.com/b-cubed-eu/euroraccoon/tree/main/data/output/GAM_outputs) to download the plots shown in this section.\n\n### Standard plots\n\nIn this section we show the plots as returned by `apply_gam()`. Plot titles could be quite long. Folder: [`./data/output/GAM_outputs/long_titles`](https://github.com/b-cubed-eu/euroraccoon/tree/main/data/output/GAM_outputs/long_titles).\n\n#### Occurrences\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurrr::walk(gam_occs, function(country) {\n  purrr::walk(country, function(x) print(x$plot))\n  }\n)\n```\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/occs-plots-20.png){width=672}\n:::\n:::\n\n\n\n\n#### Measured occupancy\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurrr::walk(gam_ncells, function(country) {\n  purrr::walk(country, function(x) print(x$plot))\n  }\n)\n```\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/n_cells-plots-20.png){width=672}\n:::\n:::\n\n\n\n\n### Short titles\n\nWe show and save plots with the species only as title. We save them in sub folder [`./data/output/GAM_outputs/short_title`](https://github.com/b-cubed-eu/euroraccoon/tree/main/data/output/GAM_outputs/short_title).\n\n#### Occurrences\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurrr::iwalk(gam_occs, function(x, country) {\n  purrr::iwalk(x, function(y, sp) {\n    y$plot <- y$plot + ggplot2::ggtitle(label = paste(sp, \"-\", country))\n    ggplot2::ggsave(\n      filename = here::here(\n        \"data\",\n        \"output\",\n        \"GAM_outputs\",\n        \"short_title\",\n        paste0(\"occurrences_\", sp, \"_\", country, \".png\")),\n      plot = y$plot,\n      width = plot_dimensions$width,\n      height = plot_dimensions$height,\n      units = \"px\"\n    )\n    print(y$plot)\n  })\n})\n```\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_occs-20.png){width=672}\n:::\n:::\n\n\n\n\n#### Occupancy\n\nWe do the same for the measured occupancy (number of occupied grid cells).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npurrr::iwalk(gam_ncells, function(x, country) {\n  purrr::iwalk(x, function(y, sp) {\n    y$plot <- y$plot + ggplot2::ggtitle(label = paste(sp, \"-\", country))\n    ggplot2::ggsave(\n      filename = here::here(\n        \"data\",\n        \"output\",\n        \"GAM_outputs\",\n        \"short_title\",\n        paste0(\"occupancy_\", sp, \"_\", country, \".png\")),\n      plot = y$plot,\n      width = plot_dimensions$width,\n      height = plot_dimensions$height,\n      units = \"px\"\n    )\n    print(y$plot)\n  })\n})\n```\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/remove_titles_ncells}-20.png){width=672}\n:::\n:::\n\n\n\n\n### Grid\n\nFor each country, we can show the plots of the number of occurrences and the measured occupancy next to each other. We use the full country name. Plots are saved in subfolder [`./data/output/GAM_outputs/plots_for_countries`](https://github.com/b-cubed-eu/euroraccoon/tree/main/data/output/GAM_outputs/plots_for_countries).\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Transform gam_occs and gam_ncells into a list of lists \ngam_countries <- purrr::map(\n  countrycode,\n  function(code) {\n    purrr::map2(\n      gam_occs[[code]],\n      gam_ncells[[code]],\n      function(x, y) list(occurrences = x, ncells = y)\n    )\n  }\n)\nnames(gam_countries) <- countrycode\n# Create a grid of plots for each country\npurrr::walk2(\n  gam_countries,\n  countrycode,\n  function(country, code) {\n    purrr::walk(country, function(x) {\n      # Remove title\n      x$occurrences$plot <- x$occurrences$plot + ggplot2::ggtitle(NULL)\n      x$ncells$plot <- x$ncells$plot + ggplot2::ggtitle(NULL)\n      p <- patchwork::wrap_plots(x$occurrences$plot,\n                                 x$ncells$plot,\n                                 nrow = 1,\n                                 ncol = 2) +\n        # Unify legends\n        patchwork::plot_layout(guides = 'collect') + \n        # Add general title\n        patchwork::plot_annotation(\n          title = countries$country_name[countries$countrycode == code]\n        )\n      ggplot2::ggsave(\n        filename = here::here(\n          \"data\",\n          \"output\",\n          \"GAM_outputs\",\n          \"plots_for_countries\",\n          paste0(code, \"_grid.png\")),\n        plot = p,\n        width = plot_dimensions$width,\n        height = plot_dimensions$height,\n        units = \"px\"\n      )\n      print(p)\n    })\n  }\n)\n```\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-1.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-2.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-3.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-4.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-5.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-6.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-7.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-8.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-9.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-10.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-11.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-12.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-13.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-14.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-15.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-16.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-17.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-18.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-19.png){width=672}\n:::\n\n::: {.cell-output-display}\n![](about_data_files/figure-html/grid_per_country-20.png){width=672}\n:::\n:::\n",
    "supporting": [
      "about_data_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}